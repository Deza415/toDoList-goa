// Code generated by goa v3.20.1, DO NOT EDIT.
//
// todo client
//
// Command:
// $ goa gen github.com/Deza415/toDoList-goa/design

package todo

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "todo" service client.
type Client struct {
	ListEndpoint   goa.Endpoint
	CreateEndpoint goa.Endpoint
}

// NewClient initializes a "todo" service client given the endpoints.
func NewClient(list, create goa.Endpoint) *Client {
	return &Client{
		ListEndpoint:   list,
		CreateEndpoint: create,
	}
}

// List calls the "list" endpoint of the "todo" service.
func (c *Client) List(ctx context.Context) (res []*Todo, err error) {
	var ires any
	ires, err = c.ListEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]*Todo), nil
}

// Create calls the "create" endpoint of the "todo" service.
func (c *Client) Create(ctx context.Context, p *CreatePayload) (res *Todo, err error) {
	var ires any
	ires, err = c.CreateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Todo), nil
}
